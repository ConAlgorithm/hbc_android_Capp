apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

Properties getProperties() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties;
}

String keyStoreFile() {
    return getProperties().getProperty('storeFile');
}

String localKeyAlias() {
    return getProperties().getProperty('keyAlias');
}

String localKeyPassword() {
    return getProperties().getProperty('keyPassword');
}

String localStorePassword() {
    return getProperties().getProperty('storePassword');
}


android {
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    signingConfigs {
        hbcSign {
            keyAlias localKeyAlias()
            keyPassword localKeyPassword()
            storeFile file(keyStoreFile())
            storePassword localStorePassword()
        }
    }
    compileSdkVersion 23
    buildToolsVersion '25.0.0'
    defaultConfig {
        applicationId "com.hugboga.custom"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 101260
        versionName "3.2.0"
        signingConfig signingConfigs.hbcSign
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' , 'x86', 'armeabi-v7a'/*, 'x86_64', 'arm64-v8a'*/
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.hbcSign
        }
        debug {
            debuggable true
            signingConfig signingConfigs.hbcSign
        }
    }
    //==productFlavors_start==
    productFlavors {
        developer {}
//        stage {}
        examination {}
        '10000'{}
        '10001'{}
        '10002'{}
        '10003'{}
        '10006'{}
        '10007'{}
        '10008'{}
        '10009'{}
        '10011'{}
        '10012'{}
        '10013'{}
    }
    //==productFlavors_end==
    //==productFlavors==

    productFlavors.all { flavor ->
        switch (flavor.name) {
            case 'developer':
                flavor.buildConfigField('String', 'API_SERVER_URL', '"https://api5-dev.huangbaoche.com/"')
                flavor.buildConfigField('String', 'H5_HOST','"https://info-dev.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_1','"https://op-dev.huangbaoche.com/app/auth.html"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_2','"https://act-dev.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_3','"https://act-dev.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_4','"https://m-dev.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_APPID','"wx1354271c597184ee"')
                flavor.manifestPlaceholders(JPUSH_KEY: "580ff852cd505c00c4be92d6", APP_CHANNEL: "developer", RONG_CLOUD_APP_KEY: "3argexb6r2kve")
                break;
//            case 'stage':
//                flavor.buildConfigField('String', 'API_SERVER_URL', '"https://api.stage.hbc.tech/"')
//                flavor.manifestPlaceholders(JPUSH_KEY: "a351a47a9106354c59188e16", APP_CHANNEL: "stage", RONG_CLOUD_APP_KEY: "ik1qhw091eiyp")
//                break;
            case 'examination':
                flavor.buildConfigField('String', 'API_SERVER_URL', '"https://api5-test.huangbaoche.com/"')
                flavor.buildConfigField('String', 'H5_HOST','"https://info-test.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_1','"https://op-test.huangbaoche.com/app/auth.html"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_2','"https://act-test.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_3','"https://act-test.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_4','"https://m-test.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_APPID','"wx1354271c597184ee"')
                flavor.manifestPlaceholders(JPUSH_KEY: "580ff852cd505c00c4be92d6", APP_CHANNEL: "examination", RONG_CLOUD_APP_KEY: "3argexb6r2kve")
                break;
            case '10000':
            case '10001':
            case '10002':
            case '10003':
            case '10006':
            case '10007':
            case '10008':
            case '10009':
            case '10011':
            case '10012':
            case '10013':
            default:
                flavor.buildConfigField('String', 'API_SERVER_URL', '"https://api5.huangbaoche.com/"')
                flavor.buildConfigField('String', 'H5_HOST','"https://info.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_1','"https://op.huangbaoche.com/app/auth.html"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_2','"https://act.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_3','"https://act.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_BASE_URL_4','"https://m.huangbaoche.com"')
                flavor.buildConfigField('String', 'SHARE_APPID','"wx62ad814ba9bf0b68"')
                flavor.manifestPlaceholders(JPUSH_KEY: "580ff852cd505c00c4be92d6", APP_CHANNEL: ""+flavor.name, RONG_CLOUD_APP_KEY: "6tnym1brna4s7")
                break;
        }
    }

    //==applicationVariants_start==
   applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            println 'default-pkg-name>>> ' + outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "CAPP_Developer_V${defaultConfig.versionName}_${defaultConfig.versionCode}_${name}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
    //==applicationVariants_end==
    //==applicationVariants==
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:support-v4:23.2.0'
    compile project(':hbcframe')
    //compile project(':IMKit')
    compile project(':nimlib')
    compile project(':polygonimageview')
    compile project(':timepicker')
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.14'
    compile 'com.yalantis:ucrop:1.3.2'
    apt 'com.zhy:mpermission-compiler:1.0.0'
    compile 'com.zhy:mpermission-api:1.0.0'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.jakewharton:butterknife:7.0.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.mani:ThinDownloadManager:1.2.4'
    compile 'com.anupcowkur:reservoir:2.1'
    compile 'com.github.mrengineer13:snackbar:1.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.tencent.bugly:crashreport:2.3.1'
    compile 'com.github.orhanobut:logger:1.12'
    compile project(':viewpagerindicator')
    compile project(path: ':datepicker')
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'se.emilsjolander:stickylistheaders:2.7.0'
    compile project(':unicorn')
    compile 'com.github.chrisbanes:PhotoView:1.3.0'
    compile project(':countdown')
    compile 'jp.wasabeef:blurry:2.0.3'
    compile 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:1.6.28'
}
