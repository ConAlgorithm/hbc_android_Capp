apply plugin: 'com.android.library'



static def getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable ignored) {
        return "";
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.1'
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 34
        versionName '3.11.1'
        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

project.afterEvaluate {
    tasks.all { task ->
        if (task.name =~ /generate.*BuildConfig/) {
            task.dependsOn(propagateBuildConfig)
        }
    }
}

// workaround of gradle bug: build type of library is always release.
task propagateBuildConfig << {
    project.android.buildTypes.all { type ->
        type.debuggable = rootProject.ext.has("debugBuild") ? rootProject.ext.debugBuild : false
    }
}

dependencies {
    api fileTree(include: ['*.jar'], exclude: ['android-support-v4.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:+'
}